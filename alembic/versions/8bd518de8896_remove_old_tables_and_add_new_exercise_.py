"""Remove old tables and add new exercise tables

Revision ID: 8bd518de8896
Revises: 20b9a10c75b3
Create Date: 2025-03-23 01:04:04.926557

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8bd518de8896'
down_revision: Union[str, None] = '20b9a10c75b3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Удаление старых таблиц
    op.drop_table('filled_field')
    op.drop_table('variants')
    op.drop_table('field')
    op.drop_table('completed_exercise')
    op.drop_table('exercise_structure')

    # Создание новых таблиц
    op.create_table('belief_analysis',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('time', sa.DateTime(), nullable=False),
                    sa.Column('field_1', sa.String(), nullable=False),
                    sa.Column('field_2', sa.String(), nullable=False),
                    sa.Column('field_3', sa.String(), nullable=False),
                    sa.Column('field_4', sa.String(), nullable=False),
                    sa.Column('field_5', sa.String(), nullable=False),
                    sa.Column('field_6', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('defining_problem_groups',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('time', sa.DateTime(), nullable=False),
                    sa.Column('field_1', sa.String(), nullable=False),
                    sa.Column('field_2', sa.String(), nullable=False),
                    sa.Column('field_3', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('problem_analysis',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('time', sa.DateTime(), nullable=False),
                    sa.Column('field_1', sa.String(), nullable=False),
                    sa.Column('field_2', sa.String(), nullable=False),
                    sa.Column('field_3', sa.String(), nullable=False),
                    sa.Column('field_4', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('problems_and_goals',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('time', sa.DateTime(), nullable=False),
                    sa.Column('field_1', sa.String(), nullable=False),
                    sa.Column('field_2', sa.String(), nullable=False),
                    sa.Column('field_3', sa.String(), nullable=False),
                    sa.Column('field_4', sa.String(), nullable=False),
                    sa.Column('field_5', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('testing_beliefs',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('time', sa.DateTime(), nullable=False),
                    sa.Column('field_1', sa.String(), nullable=False),
                    sa.Column('field_2', sa.String(), nullable=False),
                    sa.Column('field_3', sa.String(), nullable=False),
                    sa.Column('field_4', sa.String(), nullable=False),
                    sa.Column('field_5', sa.String(), nullable=False),
                    sa.Column('field_6', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('testing_beliefs')
    op.drop_table('problems_and_goals')
    op.drop_table('problem_analysis')
    op.drop_table('defining_problem_groups')
    op.drop_table('belief_analysis')

    # Возвращаем старые таблицы
    op.create_table(
        'exercise_structure',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('picture_link', sa.String(), nullable=True),
        sa.Column('linked_exercise_id', postgresql.UUID(
            as_uuid=True), nullable=True),
        sa.Column('closed', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'completed_exercise',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=True),
        sa.Column('exercise_structure_id', postgresql.UUID(
            as_uuid=True), nullable=True),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(['exercise_structure_id'], [
                                'exercise_structure.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'field',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('hint', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('type', sa.Enum(FieldType), nullable=True),
        sa.Column('major', sa.Boolean(), nullable=True),
        sa.Column('exercise_structure_id', postgresql.UUID(
            as_uuid=True), nullable=True),
        sa.Column('exercises', postgresql.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(['exercise_structure_id'], [
                                'exercise_structure.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'variants',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('field_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ['field_id'], ['field.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'filled_field',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('text', sa.String(), nullable=True),
        sa.Column('field_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('completed_exercise_id', postgresql.UUID(
            as_uuid=True), nullable=True),
        sa.Column('exercises', postgresql.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(
            ['field_id'], ['field.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['completed_exercise_id'], [
                                'completed_exercise.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
