"""Упражнения 2

Revision ID: 59baea6b5202
Revises: c727548df7a0
Create Date: 2025-03-30 11:36:42.369952

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql  # Правильный импорт для PostgreSQL-специфичных типов

from database.enum import FieldType

# revision identifiers, used by Alembic.
revision: str = '59baea6b5202'
down_revision: Union[str, None] = '8bd518de8896'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # op.execute("DROP TYPE IF EXISTS fieldtype")

    op.create_table(
        'exercise_structure',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('picture_link', sa.String(), nullable=True),
        sa.Column('linked_exercise_id', postgresql.UUID(
            as_uuid=True), nullable=True),
        sa.Column('closed', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'completed_exercise',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=True),
        sa.Column('exercise_structure_id', postgresql.UUID(
            as_uuid=True), nullable=True),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(['exercise_structure_id'], [
            'exercise_structure.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'field',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('hint', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('type', sa.Enum(FieldType), nullable=True),
        sa.Column('major', sa.Boolean(), nullable=True),
        sa.Column('exercise_structure_id', postgresql.UUID(
            as_uuid=True), nullable=True),
        sa.Column('exercises', postgresql.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(['exercise_structure_id'], [
            'exercise_structure.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'variants',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('field_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ['field_id'], ['field.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'filled_field',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('text', sa.String(), nullable=True),
        sa.Column('field_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('completed_exercise_id', postgresql.UUID(
            as_uuid=True), nullable=True),
        sa.Column('exercises', postgresql.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(
            ['field_id'], ['field.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['completed_exercise_id'], [
            'completed_exercise.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('filled_field')
    op.drop_table('variants')
    op.drop_table('field')
    op.drop_table('completed_exercise')
    op.drop_table('exercise_structure')
    # ### end Alembic commands ###
